{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "clustername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Managed Cluster resource."
      }
    },
    "dnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
      }
    },
    "osDiskSizeGB": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 0 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
      },
      "minValue": 0,
      "maxValue": 1023
    },
    "agentCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "The number of agent nodes for the cluster."
      },
      "minValue": 1,
      "maxValue": 50
    },
    "agentVMSize": {
      "type": "string",
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The size of the Virtual Machine."
      }
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "Client ID (used by cloudprovider)"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "osType": {
      "type": "string",
      "defaultValue": "Linux",
      "allowedValues": [
        "Linux"
      ],
      "metadata": {
        "description": "The type of operating system."
      }
    },
    "kubernetesVersion": {
      "type": "string",
      "defaultValue": "1.7.7",
      "metadata": {
        "description": "The version of Kubernetes."
      }
    },
    "enableOmsAgent": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "boolean flag to turn on and off of omsagent addon"
      }
    },
    "workspaceName": {
      "type": "string",
      "metadata": {
        "description": "Specify the name of the OMS workspace"
      }
    },
    "networkPlugin": {
      "type": "string",
      "allowedValues": [
        "azure",
        "kubenet"
      ],
      "metadata": {
        "description": "Network plugin used for building Kubernetes network."
      }
    },
    "serviceadr": {
      "type": "string",
      "metadata": {
        "description": "A CIDR notation IP range from which to assign service cluster IPs."
      }
    },
    "dnsServiceIP": {
      "type": "string",
      "metadata": {
        "description": "Containers DNS server IP address."
      }
    },
    "dockerBridgeCidr": {
      "type": "string",
      "metadata": {
        "description": "A CIDR notation IP for Docker bridge."
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The resourcegroup name of the vnet"
      }
    },
    "omsworkspacegroup": {
      "type": "string",
      "metadata": {
        "description": "The resourcegroup name of the oms workspace"
      }
    },
    "omsworkspacename": {
      "type": "string",
      "metadata": {
        "description": "The name of the oms workspace"
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the existing virtual network"
      }
    },
    "subnet": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet"
      }
    },
    "enableHttpApplicationRouting": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "boolean flag to turn on and off of http application routing"
      }
    },
    "vnetSubnetIP": {
      "type": "string",
      "metadata": {
        "description": "The ip range for the subnet"
      }
    }
  },
  "variables": {
    "subNetName": "[concat(parameters('vnetName'), '/', parameters('subnet'))]",
    "omsworkspaceId": "[resourceId(parameters('omsworkspacegroup'), 'microsoft.operationalinsights/workspaces', parameters('omsworkspacename'))]",
    "vnetId": "[resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
  },
  "resources": [
    {
      "apiVersion": "2018-03-31",
      "dependsOn": [
        "VirtualNetworkSubnet"
      ],
      "type": "Microsoft.ContainerService/managedClusters",
      "location": "[resourcegroup().location]",
      "name": "[parameters('clustername')]",
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "enableRBAC": false,
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "addonProfiles": {
          "httpApplicationRouting": {
            "enabled": "[parameters('enableHttpApplicationRouting')]"
          },
          "omsagent": {
            "enabled": "[parameters('enableOmsAgent')]",
            "config": {
              "condition": "[parameters('enableOmsAgent')]",
              "logAnalyticsWorkspaceResourceID": "[variables('omsWorkspaceId')]"
            }
          }
        },
        "agentPoolProfiles": [
          {
            "name": "agentpool",
            "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
            "count": "[parameters('agentCount')]",
            "vmSize": "[parameters('agentVMSize')]",
            "osType": "[parameters('osType')]",
            "storageProfile": "ManagedDisks",
            "vnetSubnetID": "[concat(variables('vnetId'), '/subnets/', parameters('subnet'))]"
          }
        ],
        "servicePrincipalProfile": {
          "ClientId": "[parameters('servicePrincipalClientId')]",
          "Secret": "[parameters('servicePrincipalClientSecret')]"
        },
        "networkProfile": {
          "networkPlugin": "[parameters('networkPlugin')]",
          "serviceCidr": "[parameters('serviceadr')]",
          "dnsServiceIP": "[parameters('dnsServiceIP')]",
          "dockerBridgeCidr": "[parameters('dockerBridgeCidr')]"
        }
      },
      "tags": {}
    },
    {
      "condition": "[parameters('enableOmsAgent')]",
      "type": "Microsoft.Resources/deployments",
      "name": "SolutionDeployment",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[parameters('omsworkspacegroup')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "apiVersion": "2015-11-01-preview",
              "type": "Microsoft.OperationsManagement/solutions",
              "location": "[resourcegroup().location]",
              "name": "[concat('ContainerInsights', '(', split(variables('omsworkspaceId'),'/')[8], ')')]",
              "properties": {
                "workspaceResourceId": "[variables('omsworkspaceId')]"
              },
              "plan": {
                "name": "[concat('ContainerInsights', '(', split(variables('omsworkspaceId'),'/')[8], ')')]",
                "product": "[concat('OMSGallery/', 'ContainerInsights')]",
                "promotionCode": "",
                "publisher": "Microsoft"
              }
            }
          ]
        }
      },
      "dependsOn": []
    },
    {
      "type": "Microsoft.Resources/deployments",
      "name": "VirtualNetworkSubnet",
      "apiVersion": "2017-05-10",
      "resourceGroup": "[parameters('vnetResourceGroup')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "apiVersion": "2018-02-01",
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "location": "[resourcegroup().location]",
              "name": "[variables('subNetName')]",
              "properties": {
                "addressPrefix": "[parameters('vnetSubnetIP')]"
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "controlPlaneFQDN": {
      "type": "string",
      "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('clustername'))).fqdn]"
    }
  }
}